{"ast":null,"code":"//Redux workflow\n// 1=> get input in \nimport { AUTH } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const signin = (formData, history) => async dispatch => {\n  try {\n    // const { data } = await api.signIn(formData);\n    // dispatch({ type: AUTH, data });\n    history.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const signup = (formData, history) => async dispatch => {\n  try {\n    // const { data } = await api.signUp(formData);\n    // dispatch({ type: AUTH, data });\n    history.push('/');\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["AUTH","api","signin","formData","history","dispatch","push","error","console","log","signup"],"sources":["C:/Users/adity/OneDrive/Desktop/MEMORIES_PROJECT/client/src/actions/auth.js"],"sourcesContent":["//Redux workflow\r\n// 1=> get input in \r\n\r\nimport { AUTH } from '../constants/actionTypes';\r\nimport * as api from '../api/index.js';\r\n\r\nexport const signin = (formData, history) => async (dispatch) => {\r\n  try {\r\n    // const { data } = await api.signIn(formData);\r\n\r\n    // dispatch({ type: AUTH, data });\r\n\r\n    history.push('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const signup = (formData, history) => async (dispatch) => {\r\n  try {\r\n    // const { data } = await api.signUp(formData);\r\n\r\n    // dispatch({ type: AUTH, data });\r\n\r\n    history.push('/');\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};"],"mappings":"AAAA;AACA;AAEA,SAASA,IAAT,QAAqB,0BAArB;AACA,OAAO,KAAKC,GAAZ,MAAqB,iBAArB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB,MAAOC,QAAP,IAAoB;EAC/D,IAAI;IACF;IAEA;IAEAD,OAAO,CAACE,IAAR,CAAa,GAAb;EACD,CAND,CAME,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAVM;AAYP,OAAO,MAAMG,MAAM,GAAG,CAACP,QAAD,EAAWC,OAAX,KAAuB,MAAOC,QAAP,IAAoB;EAC/D,IAAI;IACF;IAEA;IAEAD,OAAO,CAACE,IAAR,CAAa,GAAb;EACD,CAND,CAME,OAAOC,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACD;AACF,CAVM"},"metadata":{},"sourceType":"module"}