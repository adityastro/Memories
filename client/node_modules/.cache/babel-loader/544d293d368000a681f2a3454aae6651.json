{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api'; //Action Creators\n//actions are functions which have type and payload\n// we use redux thunck as we are dealing with asynchronous \n// logic we add async dispatch function in front and\n// then dispatch the actin\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: 'DELETE',\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: 'UPDATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","createPost","post","updatePost","id","deletePost","likePost"],"sources":["C:/Users/adity/OneDrive/Desktop/MEMORIES_PROJECT/client/src/actions/posts.js"],"sourcesContent":["import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE} from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\n//Action Creators\r\n//actions are functions which have type and payload\r\n// we use redux thunck as we are dealing with asynchronous \r\n// logic we add async dispatch function in front and\r\n// then dispatch the actin\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n\r\n        dispatch({ type: 'FETCH_ALL', payload: data});\r\n    } \r\n    catch (error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.createPost(post);\r\n\r\n        dispatch({type: 'CREATE', payload: data });\r\n    }\r\n    catch (error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post);\r\n\r\n        dispatch({type: 'UPDATE', payload: data});\r\n    }\r\n    catch (error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({type: 'DELETE', payload: id});\r\n    }\r\n    catch (error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id);\r\n\r\n        dispatch({type: 'UPDATE', payload: data});\r\n    }\r\n    catch (error)\r\n    {\r\n        console.log(error);\r\n    }\r\n}"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,EAAoCC,MAApC,EAA4CC,IAA5C,QAAuD,0BAAvD;AACA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;EAC9C,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB;IAEAF,QAAQ,CAAC;MAAEG,IAAI,EAAE,WAAR;MAAqBC,OAAO,EAAEH;IAA9B,CAAD,CAAR;EACH,CAJD,CAKA,OAAOI,KAAP,EACA;IACIC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAVM;AAYP,OAAO,MAAMG,UAAU,GAAIC,IAAD,IAAU,MAAOT,QAAP,IAAoB;EACpD,IAAI;IACA,MAAM;MAACC;IAAD,IAAS,MAAMH,GAAG,CAACU,UAAJ,CAAeC,IAAf,CAArB;IAEAT,QAAQ,CAAC;MAACG,IAAI,EAAE,QAAP;MAAiBC,OAAO,EAAEH;IAA1B,CAAD,CAAR;EACH,CAJD,CAKA,OAAOI,KAAP,EACA;IACIC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAVM;AAYP,OAAO,MAAMK,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOT,QAAP,IAAoB;EACxD,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACY,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;IAEAT,QAAQ,CAAC;MAACG,IAAI,EAAE,QAAP;MAAiBC,OAAO,EAAEH;IAA1B,CAAD,CAAR;EACH,CAJD,CAKA,OAAOI,KAAP,EACA;IACIC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAVM;AAYP,OAAO,MAAMO,UAAU,GAAID,EAAD,IAAQ,MAAOX,QAAP,IAAoB;EAClD,IAAI;IACA,MAAMF,GAAG,CAACc,UAAJ,CAAeD,EAAf,CAAN;IAEAX,QAAQ,CAAC;MAACG,IAAI,EAAE,QAAP;MAAiBC,OAAO,EAAEO;IAA1B,CAAD,CAAR;EACH,CAJD,CAKA,OAAON,KAAP,EACA;IACIC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAVM;AAYP,OAAO,MAAMQ,QAAQ,GAAIF,EAAD,IAAQ,MAAOX,QAAP,IAAoB;EAChD,IAAI;IACA,MAAM;MAAEC;IAAF,IAAW,MAAMH,GAAG,CAACe,QAAJ,CAAaF,EAAb,CAAvB;IAEAX,QAAQ,CAAC;MAACG,IAAI,EAAE,QAAP;MAAiBC,OAAO,EAAEH;IAA1B,CAAD,CAAR;EACH,CAJD,CAKA,OAAOI,KAAP,EACA;IACIC,OAAO,CAACC,GAAR,CAAYF,KAAZ;EACH;AACJ,CAVM"},"metadata":{},"sourceType":"module"}