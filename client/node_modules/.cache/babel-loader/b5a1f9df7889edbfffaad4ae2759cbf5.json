{"ast":null,"code":"// reducer is a function that accepts the state \n// and accepts the action and according to the \n// type of the action it returns state changed \n// by it\n//after takeing data from actions\n//and dispatched through app.js\n//we immidiatly come here to reduce\nimport { FETCH_ALL, CREATE, FETCH_POST, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, COMMENT } from '../constants/actionTypes';\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case COMMENT:\n      return { ...state\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["FETCH_ALL","CREATE","FETCH_POST","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","COMMENT","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"sources":["C:/Users/adity/OneDrive/Desktop/MEMORIES_PROJECT/client/src/reducers/posts.js"],"sourcesContent":["// reducer is a function that accepts the state \r\n// and accepts the action and according to the \r\n// type of the action it returns state changed \r\n// by it\r\n\r\n//after takeing data from actions\r\n//and dispatched through app.js\r\n//we immidiatly come here to reduce\r\n\r\nimport { FETCH_ALL, CREATE, FETCH_POST, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, COMMENT } from '../constants/actionTypes';\r\n\r\nexport default (state = { isLoading: true, posts: [] }, action) => {\r\n    switch (action.type) {\r\n      case START_LOADING:\r\n        return { ...state, isLoading: true };\r\n      case END_LOADING:\r\n        return { ...state, isLoading: false };\r\n      case FETCH_ALL:\r\n        return {\r\n          ...state,\r\n          posts: action.payload.data,\r\n          currentPage: action.payload.currentPage,\r\n          numberOfPages: action.payload.numberOfPages,\r\n        };\r\n      case FETCH_BY_SEARCH:\r\n        return { ...state, posts: action.payload };\r\n      case FETCH_POST:\r\n        return { ...state, post: action.payload };\r\n      case LIKE:\r\n        return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n      case COMMENT:\r\n        return{\r\n          ...state\r\n\r\n        };\r\n        case CREATE:\r\n        return { ...state, posts: [...state.posts, action.payload] };\r\n      case UPDATE:\r\n        return { ...state, posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)) };\r\n      case DELETE:\r\n        return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\r\n      default:\r\n        return state;\r\n    }\r\n  };"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,UAA5B,EAAwCC,MAAxC,EAAgDC,MAAhD,EAAwDC,IAAxD,EAA8DC,eAA9D,EAA+EC,aAA/E,EAA8FC,WAA9F,EAA2GC,OAA3G,QAA0H,0BAA1H;AAEA,gBAAe,YAAoD;EAAA,IAAnDC,KAAmD,uEAA3C;IAAEC,SAAS,EAAE,IAAb;IAAmBC,KAAK,EAAE;EAA1B,CAA2C;EAAA,IAAXC,MAAW;;EAC/D,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,aAAL;MACE,OAAO,EAAE,GAAGG,KAAL;QAAYC,SAAS,EAAE;MAAvB,CAAP;;IACF,KAAKH,WAAL;MACE,OAAO,EAAE,GAAGE,KAAL;QAAYC,SAAS,EAAE;MAAvB,CAAP;;IACF,KAAKX,SAAL;MACE,OAAO,EACL,GAAGU,KADE;QAELE,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFjB;QAGLC,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;QAILC,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;MAJzB,CAAP;;IAMF,KAAKZ,eAAL;MACE,OAAO,EAAE,GAAGI,KAAL;QAAYE,KAAK,EAAEC,MAAM,CAACE;MAA1B,CAAP;;IACF,KAAKb,UAAL;MACE,OAAO,EAAE,GAAGQ,KAAL;QAAYS,IAAI,EAAEN,MAAM,CAACE;MAAzB,CAAP;;IACF,KAAKV,IAAL;MACE,OAAO,EAAE,GAAGK,KAAL;QAAYE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;MAAnB,CAAP;;IACF,KAAKV,OAAL;MACE,OAAM,EACJ,GAAGC;MADC,CAAN;;IAIA,KAAKT,MAAL;MACA,OAAO,EAAE,GAAGS,KAAL;QAAYE,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;MAAnB,CAAP;;IACF,KAAKZ,MAAL;MACE,OAAO,EAAE,GAAGO,KAAL;QAAYE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAWA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAA9E;MAAnB,CAAP;;IACF,KAAKf,MAAL;MACE,OAAO,EAAE,GAAGM,KAAL;QAAYE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;MAAnB,CAAP;;IACF;MACE,OAAOL,KAAP;EA9BJ;AAgCD,CAjCH"},"metadata":{},"sourceType":"module"}